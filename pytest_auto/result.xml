<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="4" skipped="0" tests="12" time="0.102" timestamp="2021-07-31T23:43:02.809630" hostname="C02DC736ML85"><testcase classname="test_comparator" name="test_greater" time="0.001"><failure message="assert 100 &gt; 100">@pytest.mark.great
    def test_greater():
       num = 100
&gt;      assert num &gt; 100
E      assert 100 &gt; 100

test_comparator.py:5: AssertionError</failure></testcase><testcase classname="test_comparator" name="test_greater_equal" time="0.001" /><testcase classname="test_comparator" name="test_less" time="0.001" /><testcase classname="test_div_by_3_6" name="test_div_by_3" time="0.001" /><testcase classname="test_div_by_3_6" name="test_div_by_6" time="0.001"><failure message="assert 3 == 0&#10;  +3&#10;  -0">input_value = 39

    def test_div_by_6(input_value):
&gt;       assert input_value % 6 == 0
E       assert 3 == 0
E         +3
E         -0

test_div_by_3_6.py:12: AssertionError</failure></testcase><testcase classname="test_multi" name="test_multiplication[1-11]" time="0.001" /><testcase classname="test_multi" name="test_multiplication[2-22]" time="0.001" /><testcase classname="test_multi" name="test_multiplication[3-35]" time="0.002"><failure message="assert 33 == 35&#10;  +33&#10;  -35">num = 3, output = 35

    @pytest.mark.parametrize("num, output", [(1,11), (2,22), (3,35), (4,44)])
    #@pytest.mark.parametrize("num, output", [(1,11),(2,22),(3,35),(4,44)])
    def test_multiplication(num, output):
&gt;       assert 11*num == output
E       assert 33 == 35
E         +33
E         -35

test_multi.py:6: AssertionError</failure></testcase><testcase classname="test_multi" name="test_multiplication[4-44]" time="0.001" /><testcase classname="test_square" name="test_sqrt" time="0.001" /><testcase classname="test_square" name="testsqare" time="0.001" /><testcase classname="test_square" name="testequality" time="0.001"><failure message="assert 10 == 11&#10;  +10&#10;  -11">@pytest.mark.others
    def testequality():
&gt;       assert 10 == 11
E       assert 10 == 11
E         +10
E         -11

test_square.py:16: AssertionError</failure></testcase></testsuite></testsuites>